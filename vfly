-- 获取游戏的StarterGui服务
local StarterGui = game:GetService("StarterGui")

-- 创建界面实例
-- 屏幕图形用户界面
local ScreenGui = Instance.new("ScreenGui")
-- 主框架
local MainFrame = Instance.new("Frame")
-- 标题文本标签
local Title = Instance.new("TextLabel")
-- 内部框架
local InnerFrame = Instance.new("Frame")
-- 速度文本框
local SpeedTextBox = Instance.new("TextBox")
-- 减小按钮
local DecreaseButton = Instance.new("TextButton")
-- 增大按钮
local IncreaseButton = Instance.new("TextButton")
-- 飞行按钮
local FlyButton = Instance.new("TextButton")
-- 销毁按钮
local DestroyButton = Instance.new("TextButton")
-- UI渐变
local UIGradient = Instance.new("UIGradient")
-- UI圆角
local UICorner = Instance.new("UICorner")
-- UI描边
local UIStroke = Instance.new("UIStroke")

-- 设置ScreenGui属性
-- 将ScreenGui添加到本地玩家的PlayerGui中
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
-- 重生时不重置
ScreenGui.ResetOnSpawn = false

-- 设置主框架属性
-- 将主框架添加到ScreenGui中
MainFrame.Parent = ScreenGui
-- 背景颜色
MainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
-- 位置
MainFrame.Position = UDim2.new(0.3, 0, 0.5, -100)
-- 大小
MainFrame.Size = UDim2.new(0, 200, 0, 190)
-- 激活状态
MainFrame.Active = true
-- 可拖动
MainFrame.Draggable = true

-- 设置主框架的UI描边属性
-- 将UI描边添加到主框架中
UIStroke.Parent = MainFrame
-- 颜色
UIStroke.Color = Color3.fromRGB(0, 0, 0)
-- 厚度
UIStroke.Thickness = 2

-- 设置标题属性
-- 将标题添加到主框架中
Title.Parent = MainFrame
-- 背景透明度
Title.BackgroundTransparency = 1
-- 大小
Title.Size = UDim2.new(1, 0, 0.2, 0)
-- 字体
Title.Font = Enum.Font.GothamBold
-- 文本内容
Title.Text = "飞车脚本"
-- 文本颜色
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
-- 文本缩放
Title.TextScaled = true

-- 设置内部框架属性
-- 将内部框架添加到主框架中
InnerFrame.Parent = MainFrame
-- 背景颜色
InnerFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
-- 大小
InnerFrame.Size = UDim2.new(1, 0, 0.6, 0)
-- 位置
InnerFrame.Position = UDim2.new(0, 0, 0.2, 0)

-- 设置速度文本框属性
-- 将速度文本框添加到内部框架中
SpeedTextBox.Parent = InnerFrame
-- 背景颜色
SpeedTextBox.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
-- 位置
SpeedTextBox.Position = UDim2.new(0.5, -25, 0.1, 0)
-- 大小
SpeedTextBox.Size = UDim2.new(0, 50, 0, 30)
-- 字体
SpeedTextBox.Font = Enum.Font.Gotham
-- 文本内容
SpeedTextBox.Text = "1"
-- 文本颜色
SpeedTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
-- 文本缩放
SpeedTextBox.TextScaled = true
-- 占位符文本
SpeedTextBox.PlaceholderText = "速度"

-- 设置减小按钮属性
-- 将减小按钮添加到内部框架中
DecreaseButton.Parent = InnerFrame
-- 背景颜色
DecreaseButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
-- 大小
DecreaseButton.Size = UDim2.new(0, 50, 0, 30)
-- 位置
DecreaseButton.Position = UDim2.new(0.1, 0, 0.1, 0)
-- 字体
DecreaseButton.Font = Enum.Font.Gotham
-- 文本内容
DecreaseButton.Text = "-"
-- 文本颜色
DecreaseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
-- 文本缩放
DecreaseButton.TextScaled = true

-- 设置增大按钮属性
-- 将增大按钮添加到内部框架中
IncreaseButton.Parent = InnerFrame
-- 背景颜色
IncreaseButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
-- 大小
IncreaseButton.Size = UDim2.new(0, 50, 0, 30)
-- 位置
IncreaseButton.Position = UDim2.new(0.8, -30, 0.1, 0)
-- 字体
IncreaseButton.Font = Enum.Font.Gotham
-- 文本内容
IncreaseButton.Text = "+"
-- 文本颜色
IncreaseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
-- 文本缩放
IncreaseButton.TextScaled = true

-- 设置飞行按钮属性
-- 将飞行按钮添加到内部框架中
FlyButton.Parent = InnerFrame
-- 背景颜色
FlyButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
-- 大小
FlyButton.Size = UDim2.new(0.8, 0, 0.2, 0)
-- 位置
FlyButton.Position = UDim2.new(0.1, 0, 0.40, 0)
-- 字体
FlyButton.Font = Enum.Font.GothamBold
-- 文本内容
FlyButton.Text = "飞行"
-- 文本颜色
FlyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
-- 文本缩放
FlyButton.TextScaled = true

-- 设置销毁按钮属性
-- 将销毁按钮添加到内部框架中
DestroyButton.Parent = InnerFrame
-- 背景颜色
DestroyButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
-- 大小
DestroyButton.Size = UDim2.new(0.8, 0, 0.2, 0)
-- 位置
DestroyButton.Position = UDim2.new(0.1, 0, 0.65, 0)
-- 字体
DestroyButton.Font = Enum.Font.GothamBold
-- 文本内容
DestroyButton.Text = "销毁"
-- 文本颜色
DestroyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
-- 文本缩放
DestroyButton.TextScaled = true

-- 设置UI圆角属性
-- 圆角半径
UICorner.CornerRadius = UDim.new(0.1, 0)
-- 将UI圆角添加到主框架中
UICorner.Parent = MainFrame

-- 设置UI渐变属性
-- 将UI渐变添加到主框架中
UIGradient.Parent = MainFrame
-- 颜色序列
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 45)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(75, 75, 75))
}

-- 按钮功能

-- 减小按钮点击事件
DecreaseButton.MouseButton1Click:Connect(function()
    -- 获取速度文本框中的速度值，若无效则默认为1
    local speed = tonumber(SpeedTextBox.Text) or 1
    -- 将速度值减1，但不小于1
    SpeedTextBox.Text = tostring(math.max(speed - 1, 1))
end)

-- 增大按钮点击事件
IncreaseButton.MouseButton1Click:Connect(function()
    -- 获取速度文本框中的速度值，若无效则默认为1
    local speed = tonumber(SpeedTextBox.Text) or 1
    -- 将速度值加1
    SpeedTextBox.Text = tostring(speed + 1)
end)

-- 启用飞行功能
-- 速度处理器名称
local velocityHandlerName
-- 陀螺仪处理器名称
local gyroHandlerName
-- 当前相机
local camera
-- 空向量3
local v3none
-- 零向量3
local v3zero
-- 无穷大向量3
local v3inf
-- 控制模块
local controlModule
-- 身体速度实例
local bv
-- 身体陀螺仪实例
local bg
-- 角色添加连接
local mfly1
-- 渲染步进连接
local mfly2

-- 启用飞行函数
local function EnableFly()
    velocityHandlerName = 32
    gyroHandlerName = 64
    camera = workspace.CurrentCamera
    v3none = Vector3.new()
    v3zero = Vector3.new(0, 0, 0)
    v3inf = Vector3.new(9e9, 9e9, 9e9)
    -- 从玩家脚本中获取控制模块
    controlModule = require(game.Players.LocalPlayer.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))

    -- 创建身体速度实例
    bv = Instance.new("BodyVelocity")
    bv.Name = velocityHandlerName
    -- 将身体速度实例添加到角色的HumanoidRootPart中
    bv.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
    bv.MaxForce = v3zero
    bv.Velocity = v3zero

    -- 创建身体陀螺仪实例
    bg = Instance.new("BodyGyro")
    bg.Name = gyroHandlerName
    -- 将身体陀螺仪实例添加到角色的HumanoidRootPart中
    bg.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
    bg.MaxTorque = v3inf
    bg.P = 1000
    bg.D = 50

    -- 角色添加时的连接处理
    mfly1 = game.Players.LocalPlayer.CharacterAdded:Connect(function()
        -- 创建身体速度实例
        local bv = Instance.new("BodyVelocity")
        bv.Name = velocityHandlerName
        -- 将身体速度实例添加到角色的HumanoidRootPart中
        bv.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
        bv.MaxForce = v3zero
        bv.Velocity = v3zero

        -- 创建身体陀螺仪实例
        bg = Instance.new("BodyGyro")
        bg.Name = gyroHandlerName
        -- 将身体陀螺仪实例添加到角色的HumanoidRootPart中
        bg.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
        bg.MaxTorque = v3inf
        bg.P = 1000
        bg.D = 50
    end)

    -- 渲染步进的连接处理
    mfly2 = game:GetService('RunService').RenderStepped:Connect(function()
        camera = workspace.CurrentCamera
        -- 获取速度文本框中的速度值，若无效则默认为1
        local speed = tonumber(SpeedTextBox.Text) or 1 

        -- 检查角色相关部件是否存在
        if game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid") 
            and game.Players.LocalPlayer.Character.HumanoidRootPart 
            and game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(velocityHandlerName) 
            and game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(gyroHandlerName) then

            local humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
            local VelocityHandler = game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(velocityHandlerName)
            local GyroHandler = game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(gyroHandlerName)

            VelocityHandler.MaxForce = v3inf
            GyroHandler.MaxTorque = v3inf
            GyroHandler.CFrame = camera.CFrame

            local direction = controlModule:GetMoveVector()
            local calculatedVelocity = v3none

            -- 根据方向和速度应用移动
            calculatedVelocity = calculatedVelocity 
                                 + camera.CFrame.RightVector * direction.X * speed * 50
                                 - camera.CFrame.LookVector * direction.Z * speed * 50

            VelocityHandler.Velocity = calculatedVelocity
        end
    end)
end

-- 禁用飞行功能
local function DisableFly()
    -- 如果速度处理器和陀螺仪处理器存在，则销毁它们
    if game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(velocityHandlerName) and game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(gyroHandlerName) then
        game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(velocityHandlerName):Destroy()
        game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(gyroHandlerName):Destroy()
    end
    -- 将角色的Humanoid的PlatformStand设置为false
    game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").PlatformStand = false
    -- 断开角色添加连接
    if mfly1 then
        mfly1:Disconnect()
    end
    -- 断开渲染步进连接
    if mfly2 then
        mfly2:Disconnect()
    end
end

-- 飞行按钮点击事件
FlyButton.MouseButton1Click:Connect(function()
    -- 如果按钮文本为“飞行”
    if FlyButton.Text == "飞行" then
        FlyButton.Text = "停止飞行"
        EnableFly()
    else
        FlyButton.Text = "飞行"
        DisableFly()
    end
end)

-- 销毁按钮点击事件
DestroyButton.MouseButton1Click:Connect(function()
    DisableFly() -- 断开飞行功能
    ScreenGui:Destroy() -- 销毁屏幕图形用户界面
end)
